{"head":{"description":"Environment The environment env Object helps to define the current runtime context for PIEs as they are being viewed by a user. Any timeâ€¦"},"body":"<h1 id=\"environment\"><a href=\"#environment\" class=\"phenomic-HeadingAnchor\">#</a>Environment</h1>\n<p>The environment <code>env</code> Object helps to define the current runtime context for PIEs as they are being viewed by a user.\nAny time this property is updated the <a href=\"../pie-player.md\">PIE Player</a> will set it on the Custom Element for a PIE. It also will be passed to to the <code>model</code> function implemented by a PIE <a href=\"controller.md\">controller</a>. The result of this will be set as the <code>model</code> property in the PIE Custom Element. This allows a developer to update or filter the model as neccesary to have the appropriate data available to render the view in the current context.</p>\n<h2 id=\"environment-properties\"><a href=\"#environment-properties\" class=\"phenomic-HeadingAnchor\">#</a>Environment Properties</h2>\n<pre><code class=\"hljs language-json\">{\n    <span class=\"hljs-attr\">\"view\"</span>: <span class=\"hljs-string\">\"gather\"</span> | <span class=\"hljs-string\">\"view\"</span> | <span class=\"hljs-string\">\"evaluate\"</span> | <span class=\"hljs-string\">\"preview\"</span>,\n    <span class=\"hljs-attr\">\"role\"</span>: <span class=\"hljs-string\">\"student\"</span> | <span class=\"hljs-string\">\"instructor\"</span>,\n    <span class=\"hljs-attr\">\"lang\"</span>: [BCP <span class=\"hljs-number\">47</span> language tag],\n    <span class=\"hljs-attr\">\"options\"</span>: {...}\n}</code></pre>\n<h3 id=\"property-view\"><a href=\"#property-view\" class=\"phenomic-HeadingAnchor\">#</a>Property: <code>view</code></h3>\n<p>The <code>view</code> property indicates which view the PIE should render. The following values may be provided:</p>\n<table>\n<thead>\n<tr>\n<th>value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gather</td>\n<td>The PIE should present a view that allows a response to be captured</td>\n</tr>\n<tr>\n<td>evaluate</td>\n<td>The PIE should present the response in a way that provides an evaluation of the response provided by a user</td>\n</tr>\n<tr>\n<td>view</td>\n<td>The PIE should present a response with no inflection, and without allowing modification of the response.</td>\n</tr>\n<tr>\n<td>preview</td>\n<td>The PIE should present the interaction for a user who is finding questions/interactions to use. For example an instructor previewing questions before including them in a test.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"property-role\"><a href=\"#property-role\" class=\"phenomic-HeadingAnchor\">#</a>Property: <code>role</code></h3>\n<p>Indicates the role of the current user viewing the PIE.\nPossible values are <code>instructor</code> and <code>student</code></p>\n<p>It is up to the PIE developer to determine what to do with these properties. For example a PIE might present the <code>evaluate</code> view differently to a user with role <code>student</code> or <code>instructor</code>, but may not have any difference in presentation for roles when the view is <code>gather</code>.</p>\n<h3 id=\"property-lang\"><a href=\"#property-lang\" class=\"phenomic-HeadingAnchor\">#</a>Property: <code>lang</code></h3>\n<p>For localisation, the <code>lang</code> property informs the PIE of the primary language setting for the user.\nThe values will be <a href=\"https://www.w3.org/International/articles/language-tags/\">BCP 47</a> tags like <code>en_US</code></p>\n<h3 id=\"property-options\"><a href=\"#property-options\" class=\"phenomic-HeadingAnchor\">#</a>Property: <code>options</code></h3>\n<h3 id=\"reserved-options-properties\"><a href=\"#reserved-options-properties\" class=\"phenomic-HeadingAnchor\">#</a>Reserved <code>options</code> Properties</h3>\n<p>The following properties are reserved properties that can be passed in the <code>options</code> object.</p>\n<p>They are used to enable/disable and configure certain features that may be available in the assessment item.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Property Type</th>\n<th>Summary</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>calculator</td>\n<td>Object</td>\n<td>Calculator Tool, basic and advanced</td>\n</tr>\n<tr>\n<td>notepad</td>\n<td>Boolean</td>\n<td>Note taking tool</td>\n</tr>\n<tr>\n<td>ruler</td>\n<td>Boolean</td>\n<td>Ruler Tool</td>\n</tr>\n<tr>\n<td>protractor</td>\n<td>Boolean</td>\n<td>Protractor Tool</td>\n</tr>\n<tr>\n<td>masking</td>\n<td>Boolean</td>\n<td>Masking Tool</td>\n</tr>\n<tr>\n<td>glossary</td>\n<td>Object</td>\n<td>Glossary Tool</td>\n</tr>\n<tr>\n<td>highlighter</td>\n<td>Boolean</td>\n<td>Highlighter Tool</td>\n</tr>\n<tr>\n<td>textToSpeech</td>\n<td>Boolean</td>\n<td>Text-to-Speech</td>\n</tr>\n<tr>\n<td>stackedTranslation</td>\n<td>Boolean</td>\n<td>Show translations in-place near content</td>\n</tr>\n<tr>\n<td>asl</td>\n<td>Boolean</td>\n<td>Show ASL video content if available</td>\n</tr>\n<tr>\n<td>braille</td>\n<td>Object</td>\n<td>Options for presenting content using Brailly</td>\n</tr>\n<tr>\n<td>expandablePassages</td>\n<td>Boolean</td>\n<td>Allow expanding of passage content</td>\n</tr>\n<tr>\n<td>spellCheck</td>\n<td>Boolean</td>\n<td>Allow spell check</td>\n</tr>\n<tr>\n<td>zoom</td>\n<td>String</td>\n<td>Support zoom-level</td>\n</tr>\n<tr>\n<td>colorContrast</td>\n<td>String</td>\n<td>Support alternate color contrast</td>\n</tr>\n<tr>\n<td>closedCaptioning</td>\n<td>String</td>\n<td>Provide closed captioning for media</td>\n</tr>\n<tr>\n<td>strikeThrough</td>\n<td>Boolean</td>\n<td>Provide ability to strike-through options</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>BETA Release Note: full specification of these properties will be documented in upcoming releases of PIE framework</p>\n</blockquote>\n<h3 id=\"custom-options-properties\"><a href=\"#custom-options-properties\" class=\"phenomic-HeadingAnchor\">#</a>Custom <code>options</code> Properties</h3>\n<p>PIEs that need to allow for configuration options to be added when rendering their UI may define properties that will be passed in the <code>env.options</code>.</p>\n<p>By convention, these properties should be scoped by organization name, e.g.</p>\n<pre><code class=\"hljs language-json\">{ \n    <span class=\"hljs-attr\">\"options\"</span>:{\n        <span class=\"hljs-attr\">\"corespring\"</span>: {\n            <span class=\"hljs-attr\">\"myCustomOption\"</span>: <span class=\"hljs-string\">\"someValue\"</span>\n        }\n    } \n}</code></pre>\n","__filename":"docs/developing/environment.md","__url":"/docs/developing/environment/","__resourceUrl":"/docs/developing/environment/index.html","__dataUrl":"/docs/developing/environment/index.html.0e0a6a43657210ae517fddeac8264a46.json"}
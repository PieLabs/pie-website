{"head":{"description":"Summary summary Table of Contents [table of contents]: #table-of-contents Summary [Table of Contents] [PIE Components] [PIE Roadmap] PIEâ€¦"},"body":"<h2 id=\"summary\"><a href=\"#summary\" class=\"phenomic-HeadingAnchor\">#</a>Summary</h2>\n<p>summary</p>\n<h2 id=\"table-of-contents\"><a href=\"#table-of-contents\" class=\"phenomic-HeadingAnchor\">#</a>Table of Contents</h2>\n<ul>\n<li><li><a href=\"#pie-components\">PIE Components</a></li><li><a href=\"#pie-roadmap\">PIE Roadmap</a></li></li>\n<li><a href=\"#interactions\">Interactions</a></li>\n<li><a href=\"#tools-utilities-accessibility\">Tools, Utilities, Accessibility</a></li>\n<li>\n<p><a href=\"#draft-pie-authoring-proposal\">Draft PIE Authoring Proposal</a></p>\n<ul>\n<li><a href=\"#handling-file-uploads\">Handling File Uploads</a></li>\n</ul>\n</li>\n<li><a href=\"#packaging-and-delivery\">Packaging and Delivery</a></li>\n<li><a href=\"#test-delivery\">Test Delivery</a></li>\n</ul>\n<h2 id=\"pie-components\"><a href=\"#pie-components\" class=\"phenomic-HeadingAnchor\">#</a>PIE Components</h2>\n<p>PIE cli\nPIE Player\nPIEs - Interactions and Tools\nPIE TDS - reference systems and libraries that will </p>\n<h2 id=\"pie-roadmap\"><a href=\"#pie-roadmap\" class=\"phenomic-HeadingAnchor\">#</a>PIE Roadmap</h2>\n<h1 id=\"interactions\"><a href=\"#interactions\" class=\"phenomic-HeadingAnchor\">#</a>Interactions</h1>\n<p>Build a suite of Open Source interaction types</p>\n<h1 id=\"tools-utilities-accessibility\"><a href=\"#tools-utilities-accessibility\" class=\"phenomic-HeadingAnchor\">#</a>Tools, Utilities, Accessibility</h1>\n<p>Build a set of Open Source Custome Elements for delivering accessiblity requirements.</p>\n<h1 id=\"draft-pie-authoring-proposal\"><a href=\"#draft-pie-authoring-proposal\" class=\"phenomic-HeadingAnchor\">#</a>Draft PIE Authoring Proposal</h1>\n<p>Developers can create configuration panels for PIEs that allow content authors to configure interactions. This capability will be made available in a similar style to how PIEs are developed.</p>\n<ul>\n<li>A Custom Element that renders a configuration panel can be created by a developer as an ES6 Javascript module and ES6 Imports.</li>\n<li>The configuration module is a standard independent NPM package</li>\n<li>A property added to the <code>package.json</code> will define which PIE(s) and version(s) (semver) the configuration module targets</li>\n<li>If a configuration module package is included within a PIE in an <code>configure</code> directory, the <code>pie info</code> command will load the package when previewing a PIE. Alternatively a </li>\n</ul>\n<h2 id=\"handling-file-uploads\"><a href=\"#handling-file-uploads\" class=\"phenomic-HeadingAnchor\">#</a>Handling File Uploads</h2>\n<blockquote>\n<p>We need to do some prototyping on this to determine the best API.</p>\n</blockquote>\n<p>The Configuration Panel itself does not upload files to a server. It can can emit an Event with a FileReader object</p>\n<p>TODO: how best to handle this?\nCan use FileReader, but upload might need to be chunked for large files, could...</p>\n<ul>\n<li>\n<p>have Configure Element emit an event with a <code>File</code> or <code>File[]</code> and get a <code>Progress</code> reader object property set back? </p>\n</li>\n<li>\n<p>An Open Source utility Custom Element for select/drop upload will be made available. Similar to <code>https://customelements.io/winhowes/file-upload/</code></p>\n</li>\n</ul>\n<p>Authoring module can be packaged as am independent NPM package, with definitions of what PIEs it supports.\nThis package can be included within a PIE in <code>authoring</code> directory.</p>\n<p>PIE Author Element\nThis Element, similar to the PIE player\nAsset Uploader</p>\n<h1 id=\"packaging-and-delivery\"><a href=\"#packaging-and-delivery\" class=\"phenomic-HeadingAnchor\">#</a>Packaging and Delivery</h1>\n<p>Optimization</p>\n<ul>\n<li>Support tree-shaking\nSwitch to Yarm</li>\n</ul>\n<h1 id=\"test-delivery\"><a href=\"#test-delivery\" class=\"phenomic-HeadingAnchor\">#</a>Test Delivery</h1>\n<p>Reference Implementation</p>\n","__filename":"docs/roadmap.md","__url":"/docs/roadmap/","__resourceUrl":"/docs/roadmap/index.html","__dataUrl":"/docs/roadmap/index.html.6563ba34f9e14f905fb0362023932699.json"}